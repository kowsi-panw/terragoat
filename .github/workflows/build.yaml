
name: Cortex CLI Code Scan

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  CORTEX_API_KEY: ${{secrets.CORTEX_API_KEY}}
  CORTEX_API_KEY_ID: ${{secrets.CORTEX_API_KEY_ID}}
  CORTEX_API_URL: https://api-ms-cxsiamp.xdr.us.paloaltonetworks.com
  
jobs:
  cortex-code-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22

    - name: Verify Node.js Version
      run: node -v

    - name: Download cortexcli
      run: |
        set -x
        crtx_resp=$(curl "${CORTEX_API_URL}/public_api/v1/unified-cli/releases/download-link?os=linux&architecture=amd64" \
          -H "x-xdr-auth-id: ${CORTEX_API_KEY_ID}" \
          -H "Authorization: ${CORTEX_API_KEY}")
        crtx_url=$(echo $crtx_resp | jq -r ".signed_url")
        curl -o cortexcli $crtx_url
        chmod +x cortexcli
        ./cortexcli --version

    - name: Run Cortex CLI Code Scan
      run: |
        ./cortexcli \
          --api-base-url "${CORTEX_API_URL}" \
          --api-key "${CORTEX_API_KEY}" \
          --api-key-id "${CORTEX_API_KEY_ID}" \
          code scan \
          --directory "${{github.workspace}}" \
          --repo-id "${{github.repository}}" \
          --branch "${{github.ref_name}}" \
          --source "GITHUB_ACTIONS" \
          --create-repo-if-missing
        
    - name: Upload SARIF file
      uses: GitHub/codeql-action/upload-sarif@v2
      
      # Results are generated only on a success or failure
      # this is required since GitHub by default won't run the next step
      # when the previous one has failed. Alternatively, enable soft_fail in checkov action.
      if: success() || failure()
      with:
        sarif_file: results.sarif
# name: build
# on:
#   push:
#     branches:
#       - master
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#         name: Checkout repo
#         with:
#           fetch-depth: 0
#       - name: Run yor action
#         uses: bridgecrewio/yor-action@main
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v1
#         with:
#           python-version: 3.7
#       - name: Update documentation
#         run: |
#           git config --local user.email "action@github.com"
#           git config --local user.name "GitHub Action"
#           git fetch --tags
#           git pull
#           latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
#           echo "latest tag: $latest_tag"
#           new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
#           echo "new tag: $new_tag"

#           pip install -U checkov
#           cat .github/template.md > README.md && checkov -d terraform -o github_failed_only -s >> README.md
#           git add README.md  || echo "No changes to commit"
#           git commit -m "update resource scan result doc" README.md || echo "No changes to commit"
#           git push origin
#           git tag $new_tag
#           git push origin $new_tag
